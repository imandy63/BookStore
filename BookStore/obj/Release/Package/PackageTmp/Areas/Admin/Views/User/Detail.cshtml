@model dynamic
@{
    ViewBag.Title = "Chi tiết";
}


<div class="p-4 my-4 mx-2">
    <h2 class="text-2xl font-bold  my-4">Thông tin</h2>
    @using (Html.BeginForm("Delete", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="my-4">
            @Html.TextBox("Id", "", new { @Value = Model.GetType().GetProperty("Id").GetValue(Model, null), @class = "hidden" })
            <div>
                <button type="submit" class="text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center">Xóa</button>
            </div>
        </div>
    }
    <div class="flex justify-center">
        @using (Html.BeginForm("UpdateUser", "User", FormMethod.Post, new { @class = "p-6 max-w-[1150px] w-[90vw]" }))
        {
            @Html.TextBox("UserId", "", new { @Value = Model.GetType().GetProperty("Id").GetValue(Model, null), @class = "hidden" })
            <div class="">
                <div class="my-4">
                    @Html.Label("Tên", new { @class = "text-black my-1 block font-normal" })
                    @Html.TextBox("Name", "", new { @Value = Model.GetType().GetProperty("Name").GetValue(Model, null), @class = "block p-2 border w-full h-[36px] focus:border-[rgb(200,200,200)] hover:border-[rgb(200,200,200)] outline-none" })
                </div>
                <div class="my-4">
                    @Html.Label("Điện thoại", new { @class = "text-black my-1 block font-normal" })
                    @Html.TextBox("PhoneNumber", "", new { @Value = Model.GetType().GetProperty("PhoneNumber").GetValue(Model, null), @class = "block p-2 border w-full h-[36px] focus:border-[rgb(200,200,200)] hover:border-[rgb(200,200,200)] outline-none" })
                </div>
                <div class="my-4">
                    @Html.Label("Địa chỉ", new { @class = "text-black my-1 block font-normal" })
                    @Html.TextBox("Address", "", new { @Value = Model.GetType().GetProperty("Address").GetValue(Model, null), @class = "block p-2 border w-full h-[36px] focus:border-[rgb(200,200,200)] hover:border-[rgb(200,200,200)] outline-none" })
                </div>
                <div class="my-4">
                    @Html.Label("Role", new { @class = "text-black my-1 block font-normal" })
                    <select name="Role" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5">
                        @foreach (var role in ViewBag.Roles)
                        {
                            if (role.Id == @Model.GetType().GetProperty("RoleId").GetValue(Model, null))
                            {
                                <option value="@role.Name" selected>@role.Name</option>
                            }
                            else
                            {
                                <option value="@role.Name">@role.Name</option>
                            }
                        }
                    </select>
                </div>
                <div class="flex justify-center gap-20">
                    <a href="/Admin/User/UpdatePassword/@Model.GetType().GetProperty("Id").GetValue(Model, null)" class="text-white duration-300 font-bold hover:bg-orange-700 bg-orange-500 py-2 px-4 cursor-pointer">
                        Cập nhật mật khảu
                    </a>
                    <button type="submit"
                            class="text-white duration-300 font-bold hover:bg-[#446084] bg-[#3ac2cc] py-2 px-4">
                        Cập nhật
                    </button>
                </div>
            </div>
        }
    </div>
</div>
